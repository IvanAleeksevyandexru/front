include:
  - project: appsec/cicd
    file: /luxsoft/epgu2-form-frontend.yml

image: node:latest

cache: &global_cache
  key: cache-${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - dist/
    - projects/epgu-constructor/node_modules
    - projects/epgu-constructor-types/node_modules
    - projects/epgu-constructor-types/dist

stages:
  - install
  - postinstall
  - code-quality
  - children-clubs-build
  - library-build
  - library-publish
  - build
  - image
  - deploy
  - code_check
Install:
  stage: install
  except:
    variables:
      - $GITLAB_USER_LOGIN == $CI_USER
  before_script:
    - rm -rf dist
  script:
    - yarn install
  only:
    - merge_requests
    - master
    - stage

Pre-build:
  stage: postinstall
  except:
    variables:
      - $GITLAB_USER_LOGIN == $CI_USER
  cache:
    <<: *global_cache
  script:
    - yarn lib:type:build
  only:
    - merge_requests
    - master
    - stage

Lint-test-dry:
  stage: code-quality
  except:
    variables:
      - $GITLAB_USER_LOGIN == $CI_USER
  cache:
    <<: *global_cache
    policy: pull
  script:
    - echo -e "##########\nlint\n##########"
    - yarn lint || true
    - echo -e "##########\ntest\n##########"
    - yarn test:coverage || true
    - echo -e "#########\ndry\n##########"
    - yarn test:dry || true
    - echo -e "##########\ndone\n##########"
  allow_failure: true
  artifacts:
    reports:
      cobertura: coverage/jest/cobertura-coverage.xml
      junit: coverage/junit/test-results.xml
  only:
    - merge_requests
    - master
    - stage

Children-clubs-build:
  stage: children-clubs-build
  except:
    variables:
      - $GITLAB_USER_LOGIN == $CI_USER
  script:
    - yarn lib:children-clubs
  only:
    - merge_requests
    - master
    - stage

Library-build:
  stage: library-build
  except:
    variables:
      - $GITLAB_USER_LOGIN == $CI_USER
  script:
    - yarn lib:build:ivy && yarn lib:build
  only:
    - merge_requests
    - master
    - stage

# Library-publish:
#   stage: library-publish
#   except:
#     variables:
#       - $GITLAB_USER_LOGIN == $CI_USER
#   before_script:
#     - echo "registry=http://npm.gosuslugi.local/" > ~/.npmrc
#     - echo "//npm.gosuslugi.local/:_authToken=\"${NPM_TOKEN}\"" >> ~/.npmrc
#   script:
#     - echo $GITLAB_USER_LOGIN
#     - echo $CI_USER
#     - echo $CI_USER_EMAIL
#     - echo $CI_COMMIT_BRANCH
#     - echo $CI_COMMIT_REF_NAME
#     - echo $CI_COMMIT_SHA
#     - git config --global user.email $CI_USER_EMAIL
#     - git config --global user.name $CI_USER
#     - git config receive.advertisePushOptions true
#     - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
#     - npm run release -- --release-as patch
#     - npm run generate-lib-version-ts
#     - CURRENT_TAG=$(git describe --abbrev=0)
#     - echo $CURRENT_TAG
#     - git push http://${CI_USER}:${CI_ACCESS_TOKEN}@git.gosuslugi.local/luxoft/epgu2-form-frontend.git --follow-tags ${CI_COMMIT_REF_NAME}:${CI_COMMIT_BRANCH}
#     - cd dist/epgu-constructor
#     - npm version ${CURRENT_TAG:1}
#     - if [ $CI_COMMIT_BRANCH == 'stage' ]; then npm publish --tag beta; else npm publish --tag stable; fi
#   after_script:
#     - CURRENT_TAG=$(git describe --abbrev=0)
#     - git tag -d $CURRENT_TAG
#     - git reset --hard HEAD~1
#   only:
#     - master
#    - stage

Build:
  stage: build
  except:
    variables:
      - $GITLAB_USER_LOGIN == $CI_USER
  script:
    - yarn build --prod
#    - /devops/notify/notify.sh fronted_new_master_available
  only:
    - merge_requests

# Build-image:
#   stage: image
#   except:
#     variables:
#       - $GITLAB_USER_LOGIN == $CI_USER
#   cache:
#     <<: *global_cache
#     policy: pull
#   services:
#     - name: docker:dind
#       command: ['--insecure-registry', 'registry.gosuslugi.local']
#   image: docker:latest
#   variables:
#     GIT_STRATEGY: none
#   before_script:
#     - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY
#   script:
#     - docker build --tag $REGISTRY/$IMAGE:$CI_COMMIT_SHA --tag $REGISTRY/$IMAGE:$CI_COMMIT_REF_SLUG .
#     - docker push $REGISTRY/$IMAGE:$CI_COMMIT_SHA
#     - docker push $REGISTRY/$IMAGE:$CI_COMMIT_REF_SLUG
#   only:
#     - merge_requests
#     - master
#     - stage
#
# Deploy to review env:
#   stage: deploy
#   except:
#     variables:
#       - $GITLAB_USER_LOGIN == $CI_USER
#   cache: {}
#   variables:
#     GIT_STRATEGY: none
#   before_script:
#     - export PATH=$PATH:/devops/k8s/bin
#   script:
#     - echo http://review-$CI_COMMIT_REF_SLUG.pgu2-dev.test.gosuslugi.ru
#     - deploy
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     url: http://review-$CI_COMMIT_REF_SLUG.pgu2-dev.test.gosuslugi.ru
#     on_stop: 'Drop review env'
#   only:
#     - merge_requests
#     - master
#     - stage
#
# Drop review env:
#   stage: deploy
#   except:
#     variables:
#       - $GITLAB_USER_LOGIN == $CI_USER
#   cache: {}
#   variables:
#     GIT_STRATEGY: none
#   before_script:
#     - export PATH=$PATH:/devops/k8s/bin
#   script:
#     - echo "Delete environment $CI_COMMIT_REF_SLUG"
#     - stop
#   when: manual
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     action: stop
#   only:
#     - merge_requests
#     - master
#     - stage#

