!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M12,19V5'/%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M5,12l7-7l7,7'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M12,5v14'/%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M19,12l-7,7l-7-7'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M19,12H5'/%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M12,19l-7-7l7-7'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M5,12h14'/%3e %3cpath style='fill:none;stroke:%2352ff80;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M12,5l7,7l-7,7'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M4.99,13.91 c-1.46-0.68-2.38-1.56-2.61-2.48C2.14,10.52,2.59,9.59,3.65,8.8c1.07-0.79,2.7-1.39,4.65-1.74c1.95-0.33,4.12-0.38,6.16-0.14 c2.05,0.25,3.87,0.78,5.2,1.52c1.32,0.73,2.08,1.63,2.15,2.56c0.07,0.93-0.56,1.84-1.77,2.58c-1.22,0.75-2.96,1.3-4.97,1.57 L8.58,16.1L12,17.45L8.58,16.1l3.84-2.63'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M11.68,13.46l3.77,2.72 l-4.09,1.49l4.09-1.49l-6.47-1.12c-2.01-0.32-3.73-0.91-4.93-1.69c-1.2-0.78-1.8-1.7-1.71-2.63c0.09-0.92,0.87-1.8,2.21-2.5 s3.18-1.18,5.23-1.39c2.05-0.19,4.22-0.09,6.16,0.29c1.94,0.39,3.56,1.04,4.61,1.85s1.47,1.76,1.21,2.67 c-0.26,0.91-1.2,1.77-2.67,2.41'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M7.8,9.06 c0.38-2.11,1.08-3.97,1.99-5.3c0.91-1.33,1.98-2.06,3.05-2.09c1.07-0.02,2.08,0.67,2.88,1.96c0.8,1.3,1.35,3.13,1.56,5.22 c0.21,2.09,0.08,4.33-0.39,6.39c-0.46,2.05-1.23,3.8-2.18,4.99c-0.95,1.18-2.04,1.74-3.1,1.58c-1.06-0.16-2.03-1.02-2.77-2.45 l-2.49-4.52l0.03,3.75l-0.03-3.75l4.25,3.51'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M9.89,12.12L7.17,14.9 L6.23,9.02l0.94,5.88l1.41-6.41c0.41-1.99,1.08-3.69,1.91-4.85c0.83-1.16,1.78-1.72,2.7-1.59c0.92,0.13,1.76,0.95,2.4,2.32 c0.64,1.37,1.04,3.23,1.15,5.29c0.1,2.06-0.1,4.22-0.57,6.14c-0.48,1.92-1.2,3.51-2.06,4.52c-0.86,1.01-1.82,1.39-2.72,1.09 s-1.71-1.28-2.29-2.78'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M1,4v6h6'/%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M3.51,15 c0.65,1.84,1.88,3.42,3.5,4.5s3.56,1.61,5.5,1.49c1.95-0.11,3.81-0.85,5.3-2.11c1.49-1.26,2.53-2.97,2.96-4.87 c0.43-1.9,0.24-3.89-0.56-5.68c-0.8-1.78-2.15-3.25-3.86-4.2c-1.71-0.94-3.68-1.31-5.61-1.04c-1.93,0.27-3.72,1.16-5.1,2.54L1,10'/%3e %3c/svg%3e"},function(e,t){e.exports="data:image/svg+xml,%3c!-- Generator: Adobe Illustrator 25.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0) --%3e %3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M23,4v6h-6'/%3e %3cpath style='fill:none;stroke:%2300ff44;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;' d='M20.49,15 c-0.65,1.84-1.88,3.42-3.51,4.5c-1.63,1.08-3.56,1.6-5.51,1.49c-1.95-0.11-3.81-0.86-5.29-2.12c-1.49-1.26-2.53-2.97-2.96-4.88 c-0.43-1.9-0.23-3.89,0.57-5.68c0.8-1.78,2.16-3.25,3.86-4.19c1.71-0.94,3.68-1.3,5.61-1.03c1.93,0.27,3.72,1.17,5.1,2.55L23,10'/%3e %3c/svg%3e"},function(e,t,n){"use strict";n.r(t);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function o(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function s(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,o,s=n.call(e),r=[];try{for(;(void 0===t||t-- >0)&&!(i=s.next()).done;)r.push(i.value)}catch(e){o={error:e}}finally{try{i&&!i.done&&(n=s.return)&&n.call(s)}finally{if(o)throw o.error}}return r}function r(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e}var a=function(e,t){this.target=t,this.type=e},c=function(e){function t(t,n){var i=e.call(this,"error",n)||this;return i.message=t.message,i.error=t,i}return o(t,e),t}(a),h=function(e){function t(t,n,i){void 0===t&&(t=1e3),void 0===n&&(n="");var o=e.call(this,"close",i)||this;return o.wasClean=!0,o.code=t,o.reason=n,o}return o(t,e),t}(a),l=function(){if("undefined"!=typeof WebSocket)return WebSocket},u={maxReconnectionDelay:1e4,minReconnectionDelay:1e3+4e3*Math.random(),minUptime:5e3,reconnectionDelayGrowFactor:1.3,connectionTimeout:4e3,maxRetries:1/0,maxEnqueuedMessages:1/0,startClosed:!1,debug:!1},d=function(){function e(e,t,n){var i=this;void 0===n&&(n={}),this._listeners={error:[],message:[],open:[],close:[]},this._retryCount=-1,this._shouldReconnect=!0,this._connectLock=!1,this._binaryType="blob",this._closeCalled=!1,this._messageQueue=[],this.onclose=null,this.onerror=null,this.onmessage=null,this.onopen=null,this._handleOpen=function(e){i._debug("open event");var t=i._options.minUptime,n=void 0===t?u.minUptime:t;clearTimeout(i._connectTimeout),i._uptimeTimeout=setTimeout((function(){return i._acceptOpen()}),n),i._ws.binaryType=i._binaryType,i._messageQueue.forEach((function(e){return i._ws.send(e)})),i._messageQueue=[],i.onopen&&i.onopen(e),i._listeners.open.forEach((function(t){return i._callEventListener(e,t)}))},this._handleMessage=function(e){i._debug("message event"),i.onmessage&&i.onmessage(e),i._listeners.message.forEach((function(t){return i._callEventListener(e,t)}))},this._handleError=function(e){i._debug("error event",e.message),i._disconnect(void 0,"TIMEOUT"===e.message?"timeout":void 0),i.onerror&&i.onerror(e),i._debug("exec error listeners"),i._listeners.error.forEach((function(t){return i._callEventListener(e,t)})),i._connect()},this._handleClose=function(e){i._debug("close event"),i._clearTimeouts(),i._shouldReconnect&&i._connect(),i.onclose&&i.onclose(e),i._listeners.close.forEach((function(t){return i._callEventListener(e,t)}))},this._url=e,this._protocols=t,this._options=n,this._options.startClosed&&(this._shouldReconnect=!1),this._connect()}return Object.defineProperty(e,"CONNECTING",{get:function(){return 0},enumerable:!0,configurable:!0}),Object.defineProperty(e,"OPEN",{get:function(){return 1},enumerable:!0,configurable:!0}),Object.defineProperty(e,"CLOSING",{get:function(){return 2},enumerable:!0,configurable:!0}),Object.defineProperty(e,"CLOSED",{get:function(){return 3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"CONNECTING",{get:function(){return e.CONNECTING},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"OPEN",{get:function(){return e.OPEN},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"CLOSING",{get:function(){return e.CLOSING},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"CLOSED",{get:function(){return e.CLOSED},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"binaryType",{get:function(){return this._ws?this._ws.binaryType:this._binaryType},set:function(e){this._binaryType=e,this._ws&&(this._ws.binaryType=e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"retryCount",{get:function(){return Math.max(this._retryCount,0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bufferedAmount",{get:function(){return this._messageQueue.reduce((function(e,t){return"string"==typeof t?e+=t.length:t instanceof Blob?e+=t.size:e+=t.byteLength,e}),0)+(this._ws?this._ws.bufferedAmount:0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"extensions",{get:function(){return this._ws?this._ws.extensions:""},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"protocol",{get:function(){return this._ws?this._ws.protocol:""},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readyState",{get:function(){return this._ws?this._ws.readyState:this._options.startClosed?e.CLOSED:e.CONNECTING},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"url",{get:function(){return this._ws?this._ws.url:""},enumerable:!0,configurable:!0}),e.prototype.close=function(e,t){void 0===e&&(e=1e3),this._closeCalled=!0,this._shouldReconnect=!1,this._clearTimeouts(),this._ws?this._ws.readyState!==this.CLOSED?this._ws.close(e,t):this._debug("close: already closed"):this._debug("close enqueued: no ws instance")},e.prototype.reconnect=function(e,t){this._shouldReconnect=!0,this._closeCalled=!1,this._retryCount=-1,this._ws&&this._ws.readyState!==this.CLOSED?(this._disconnect(e,t),this._connect()):this._connect()},e.prototype.send=function(e){if(this._ws&&this._ws.readyState===this.OPEN)this._debug("send",e),this._ws.send(e);else{var t=this._options.maxEnqueuedMessages,n=void 0===t?u.maxEnqueuedMessages:t;this._messageQueue.length<n&&(this._debug("enqueue",e),this._messageQueue.push(e))}},e.prototype.addEventListener=function(e,t){this._listeners[e]&&this._listeners[e].push(t)},e.prototype.dispatchEvent=function(e){var t,n,i=this._listeners[e.type];if(i)try{for(var o=function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}(i),s=o.next();!s.done;s=o.next()){var r=s.value;this._callEventListener(e,r)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}return!0},e.prototype.removeEventListener=function(e,t){this._listeners[e]&&(this._listeners[e]=this._listeners[e].filter((function(e){return e!==t})))},e.prototype._debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this._options.debug&&console.log.apply(console,r(["RWS>"],e))},e.prototype._getNextDelay=function(){var e=this._options,t=e.reconnectionDelayGrowFactor,n=void 0===t?u.reconnectionDelayGrowFactor:t,i=e.minReconnectionDelay,o=void 0===i?u.minReconnectionDelay:i,s=e.maxReconnectionDelay,r=void 0===s?u.maxReconnectionDelay:s,a=0;return this._retryCount>0&&(a=o*Math.pow(n,this._retryCount-1))>r&&(a=r),this._debug("next delay",a),a},e.prototype._wait=function(){var e=this;return new Promise((function(t){setTimeout(t,e._getNextDelay())}))},e.prototype._getNextUrl=function(e){if("string"==typeof e)return Promise.resolve(e);if("function"==typeof e){var t=e();if("string"==typeof t)return Promise.resolve(t);if(t.then)return t}throw Error("Invalid URL")},e.prototype._connect=function(){var e=this;if(!this._connectLock&&this._shouldReconnect){this._connectLock=!0;var t=this._options,n=t.maxRetries,i=void 0===n?u.maxRetries:n,o=t.connectionTimeout,s=void 0===o?u.connectionTimeout:o,r=t.WebSocket,a=void 0===r?l():r;if(this._retryCount>=i)this._debug("max retries reached",this._retryCount,">=",i);else{if(this._retryCount++,this._debug("connect",this._retryCount),this._removeListeners(),void 0===(c=a)||!c||2!==c.CLOSING)throw Error("No valid WebSocket class provided");var c;this._wait().then((function(){return e._getNextUrl(e._url)})).then((function(t){e._closeCalled||(e._debug("connect",{url:t,protocols:e._protocols}),e._ws=e._protocols?new a(t,e._protocols):new a(t),e._ws.binaryType=e._binaryType,e._connectLock=!1,e._addListeners(),e._connectTimeout=setTimeout((function(){return e._handleTimeout()}),s))}))}}},e.prototype._handleTimeout=function(){this._debug("timeout event"),this._handleError(new c(Error("TIMEOUT"),this))},e.prototype._disconnect=function(e,t){if(void 0===e&&(e=1e3),this._clearTimeouts(),this._ws){this._removeListeners();try{this._ws.close(e,t),this._handleClose(new h(e,t,this))}catch(e){}}},e.prototype._acceptOpen=function(){this._debug("accept open"),this._retryCount=0},e.prototype._callEventListener=function(e,t){"handleEvent"in t?t.handleEvent(e):t(e)},e.prototype._removeListeners=function(){this._ws&&(this._debug("removeListeners"),this._ws.removeEventListener("open",this._handleOpen),this._ws.removeEventListener("close",this._handleClose),this._ws.removeEventListener("message",this._handleMessage),this._ws.removeEventListener("error",this._handleError))},e.prototype._addListeners=function(){this._ws&&(this._debug("addListeners"),this._ws.addEventListener("open",this._handleOpen),this._ws.addEventListener("close",this._handleClose),this._ws.addEventListener("message",this._handleMessage),this._ws.addEventListener("error",this._handleError))},e.prototype._clearTimeouts=function(){clearTimeout(this._connectTimeout),clearTimeout(this._uptimeTimeout)},e}(),f=100;function p(e,t,n,i,o){var s=8;return i<2*s&&(s=i/2),o<2*s&&(s=o/2),e.beginPath(),e.moveTo(t+s,n),e.arcTo(t+i,n,t+i,n+o,s),e.arcTo(t+i,n+o,t,n+o,s),e.arcTo(t,n+o,t,n,s),e.arcTo(t,n,t+i,n,s),e.closePath(),e}function v(e,t,n,i,o){return e.beginPath(),e.lineWidth="3",e.strokeStyle="#52ff80B3",e.moveTo(t+5,n),e.arcTo(t+i,n,t+i,n+o,5),e.arcTo(t+i,n+o,t,n+o,5),e.arcTo(t,n+o,t,n,5),e.arcTo(t,n,t+i,n,5),e.closePath(),e.stroke()}function g(e,t){var n=Math.abs(e-t);return Math.floor(.12*n)}function y(e){return e+Math.abs(15*Math.sin((Math.floor((new Date).getTime()/6%360)-180)*Math.PI/180))}function w(e){return e+Math.abs(15*Math.cos((Math.floor((new Date).getTime()/6%360)-180)*Math.PI/180))}function _(){var e=Math.abs(Math.sin((Math.floor((new Date).getTime()/2%360)-180)*Math.PI/180));return e>.5?e:.5}var m=14,B=15,x=16,b=17,k=19,I=20,E=21,S=22,L=23,T=24,C=n(0),M=n.n(C),O=n(1),P=n.n(O),V=n(2),R=n.n(V),A=n(3),W=n.n(A),G=n(4),j=n.n(G),H=n(5),D=n.n(H),N=n(6),F=n.n(N),X=n(7),Y=n.n(X),U=n(8),q=n.n(U),Q=n(9),z=n.n(Q);function J(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],i=!0,o=!1,s=void 0;try{for(var r,a=e[Symbol.iterator]();!(i=(r=a.next()).done)&&(n.push(r.value),!t||n.length!==t);i=!0);}catch(e){o=!0,s=e}finally{try{i||null==a.return||a.return()}finally{if(o)throw s}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return $(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function K(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var Z="Вы успешно прошли проверку!",ee={1:"Изображение невозможно обработать",2:"Слишком низкое качество изображения",3:"Изображение недостаточно четкое",4:"Изображение засвечено",5:"Изображение слишком темное",6:"Изображение слишком светлое",7:"Изображение имеет блики",8:"Не найдено лицо",9:"Изображение содержит множество лиц",10:"Недостаточная ширина кадра",11:"Недостаточная высота кадра",12:"Недостаточная ширина лица",13:"Недостаточная высота лица",14:"Ваше лицо слишком близко к верхнему краю кадра",15:"Ваше лицо слишком близко к правому краю кадра",16:"Ваше лицо слишком близко к нижнему краю кадра",17:"Ваше лицо слишком близко к левому краю кадра",18:"Ошибка определения положения головы",19:"Поверните ваше лицо вправо",20:"Поверните ваше лицо влево",21:"Ваша голова слишком наклонена вправо",22:"Ваша голова слишком наклонена влево",23:"Поднимите подбородок",24:"Опустите подбородок",25:"Ошибка определения перекрытия лица (рта)",26:"Ваше лицо перекрыто другим объектом",27:"Ошибка определения очков",28:"Снимите очки",29:"Ошибка проверки общего качества изображения",30:"Общее качество изображения (AGS) низкое",31:"Ошибка проверки Liveness",32:"Ваша оценка Liveness слишком низка",33:"Слишком низкое качество оценки Liveness",34:"Ошибка определения лица в кадре"},te={100:"Отсутствует соединение"},ne=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.FRAME_WIDTH=t,this.FRAME_HEIGHT=n,this.imgPaths={up:M.a,down:P.a,left:R.a,right:W.a,yawLeft:j.a,yawRight:D.a,pitchBack:F.a,pitchFront:Y.a,rotationLeft:q.a,rotationRight:z.a},this.images={}}var t,n,i;return t=e,(n=[{key:"init",value:function(e,t){this.dpr=window.devicePixelRatio,this.canvasInfo=document.createElement("canvas"),this.canvasInfo.id="".concat(e,"-canvasInfo"),this.canvasInfo.style.position="absolute",this.canvasInfo.style.top=0,this.canvasInfo.style.left=0,this.canvasInfo.width=this.FRAME_WIDTH*this.dpr,this.canvasInfo.height=this.FRAME_HEIGHT*this.dpr,t.appendChild(this.canvasInfo),this.canvasInfo.style.width="".concat(this.FRAME_WIDTH,"px"),this.canvasInfo.style.height="".concat(this.FRAME_HEIGHT,"px"),this.ctxInfo=this.canvasInfo.getContext("2d"),this.ctxInfo.scale(this.dpr,this.dpr),this.faceBB={x:0,y:0,w:0,h:0,nX:this.FRAME_WIDTH/2-90,nY:this.FRAME_HEIGHT/2-125,nW:180,nH:250,sX:1,sY:1},this._loadImages()}},{key:"_loadImages",value:function(){var e=this;Object.entries(this.imgPaths).forEach((function(t){var n=J(t,2),i=n[0],o=n[1];new Promise((function(e,t){var n=new Image;n.addEventListener("load",(function(){return e(n)})),n.addEventListener("error",(function(e){return t(e)})),n.src=o})).then((function(t){e.images[i]=t}))}))}},{key:"renderInfo",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;cancelAnimationFrame(this.reqId),this.ctxInfo.clearRect(0,0,this.canvasInfo.width,this.canvasInfo.height),this._renderConnectionStatus(e),n?this._renderText(n[0]):this._renderText(),i&&this._renderFaceRect(i,n&&n),this.reqId=requestAnimationFrame((function(){return t.renderInfo(e,n,i)}))}},{key:"_renderText",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=[14,15,16,17,18,19,20,21,22,23,24];if(!t.some((function(t){return e===t}))){this.ctxInfo.font="18px Georgia",this.ctxInfo.fillStyle="rgba(100, 100, 100, .5)";var n=this.ctxInfo.measureText(e?e>=100?te[e]:ee[e]:Z),i=n.actualBoundingBoxLeft+n.actualBoundingBoxRight,o=n.actualBoundingBoxAscent+n.actualBoundingBoxDescent;p(this.ctxInfo,this.FRAME_WIDTH/2-i/2-10,10,i+20,o+20).fill(),this.ctxInfo.textAlign="center",this.ctxInfo.fillStyle=e?"white":"#00FF00",this.ctxInfo.fillText(e?e>=100?te[e]:ee[e]:Z,this.FRAME_WIDTH/2,20+n.actualBoundingBoxAscent)}}},{key:"_renderFaceRect",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;e&&(this.faceBB.x=Math.floor(e.x),this.faceBB.y=Math.floor(e.y),this.faceBB.w=Math.floor(e.width),this.faceBB.h=Math.floor(e.height)),this.faceBB.sX=g(this.faceBB.x,this.faceBB.nX),this.faceBB.sY=g(this.faceBB.y,this.faceBB.nY),this.faceBB.nX=this.faceBB.x>this.faceBB.nX?this.faceBB.nX+this.faceBB.sX:this.faceBB.x<this.faceBB.nX?this.faceBB.nX-this.faceBB.sX:this.faceBB.x,this.faceBB.nY=this.faceBB.y>this.faceBB.nY?this.faceBB.nY+this.faceBB.sY:this.faceBB.y<this.faceBB.nY?this.faceBB.nY-this.faceBB.sY:this.faceBB.y,this.faceBB.nW=this.faceBB.w>this.faceBB.nW?this.faceBB.nW+1:this.faceBB.w<this.faceBB.nW?this.faceBB.nW-1:this.faceBB.w,this.faceBB.nH=this.faceBB.h>this.faceBB.nH?this.faceBB.nH+1:this.faceBB.h<this.faceBB.nH?this.faceBB.nH-1:this.faceBB.h,v(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(m)&&this._arrowDown(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(B)&&this._arrowLeft(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(x)&&this._arrowUp(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(b)&&this._arrowRight(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(k)&&!t.includes(x)&&this._yawRight(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(I)&&!t.includes(x)&&this._yawLeft(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(E)&&!t.includes(x)&&!t.includes(L)&&this._rotateLeft(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(S)&&!t.includes(x)&&!t.includes(L)&&this._rotateRight(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(L)&&!t.includes(b)&&this._pitchBack(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH),t&&t.includes(T)&&!t.includes(b)&&this._pitchFront(this.ctxInfo,this.faceBB.nX,this.faceBB.nY,this.faceBB.nW,this.faceBB.nH)}},{key:"_arrowLeft",value:function(e,t,n,i,o){var s=n+o/2-22.5;this.images.left&&e.drawImage(this.images.left,y(t-60),s,45,45)}},{key:"_arrowRight",value:function(e,t,n,i,o){var s=n+o/2-22.5;this.images.right&&e.drawImage(this.images.right,w(t+i+10),s,45,45)}},{key:"_arrowUp",value:function(e,t,n,i){var o=t+i/2-22.5;this.images.up&&e.drawImage(this.images.up,o,y(n-60),45,45)}},{key:"_arrowDown",value:function(e,t,n,i,o){var s=t+i/2-22.5;this.images.down&&e.drawImage(this.images.down,s,w(n+o+10),45,45)}},{key:"_pitchBack",value:function(e,t,n,i,o){var s=n+o/2-22.5;this.images.pitchBack&&(e.save(),e.globalAlpha=_(),e.drawImage(this.images.pitchBack,t+i+10,s,45,45),e.restore())}},{key:"_pitchFront",value:function(e,t,n,i,o){var s=n+o/2-22.5;this.images.pitchFront&&(e.save(),e.globalAlpha=_(),e.drawImage(this.images.pitchFront,t+i+10,s,45,45),e.restore())}},{key:"_rotateLeft",value:function(e,t,n,i){var o=t+i/2-22.5;this.images.rotationLeft&&(e.save(),e.globalAlpha=_(),e.drawImage(this.images.rotationLeft,o,n-60,45,45),e.restore())}},{key:"_rotateRight",value:function(e,t,n,i){var o=t+i/2-22.5;this.images.rotationRight&&(e.save(),e.globalAlpha=_(),e.drawImage(this.images.rotationRight,o,n-60,45,45),e.restore())}},{key:"_yawLeft",value:function(e,t,n,i){var o=t+i/2-22.5;this.images.yawLeft&&(e.save(),e.globalAlpha=_(),e.drawImage(this.images.yawLeft,o,n-60,45,45),e.restore())}},{key:"_yawRight",value:function(e,t,n,i){var o=t+i/2-22.5;this.images.yawRight&&(e.save(),e.globalAlpha=_(),e.drawImage(this.images.yawRight,o,n-60,45,45),e.restore())}},{key:"_renderConnectionStatus",value:function(e){this._opacity=Math.abs(Math.sin((Math.floor((new Date).getTime()/10%360)-180)*Math.PI/180));var t="RGBA(135,240,0, ".concat(this._opacity,")");this.ctxInfo.beginPath(),this.ctxInfo.arc(16,16,8,0,2*Math.PI,!1),this.ctxInfo.fillStyle=e?t:"red",this.ctxInfo.fill()}}])&&K(t.prototype,n),i&&K(t,i),e}();function ie(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var oe=220,se=220,re=function(){function e(t,n,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),oe=document.body.clientWidth,se=document.body.clientHeight,this.rootNode=t,this.video=null,this.canvasVideo=null,this.wsConnectionString=n,this.onReady=i,this.onSuccess=o,this.isWSConnected=!1,this.isCameraAttached=!1,this.isVideoAttached=!1,this.isProcessing=!1,this.ws=null,this._videoWidth=oe,this._videoHeight=se,this._initDOM(),this.init()}var t,n,i;return t=e,(n=[{key:"init",value:function(){var e=this;this._attachCamera().then((function(){return e._attachVideo()})).then((function(){return e._connectWS()})).then((function(){e.onReady&&e.onReady(e)}))}},{key:"_initDOM",value:function(){this.wrapper=document.createElement("div"),this.wrapper.id="".concat("vllunapass","-wrapper"),this.wrapper.style.position="relative",this.dpr=window.devicePixelRatio,this.rootNode.appendChild(this.wrapper),this.video=document.createElement("video"),this.video.id="".concat("vllunapass","-video"),this.video.style.display="none",this.wrapper.appendChild(this.video),this.canvasVideo=document.createElement("canvas"),this.canvasVideo.id="".concat("vllunapass","-canvasVideo"),this.wrapper.appendChild(this.canvasVideo),this.ctxVideo=this.canvasVideo.getContext("2d")}},{key:"_attachCamera",value:function(){var e=this;return new Promise((function(t,n){navigator.mediaDevices.getUserMedia({video:{width:{ideal:document.body.clientWidth},height:{ideal:document.body.clientHeight}},audio:!1}).then((function(n){e.video.srcObject=n,e.video.play(),e.isCameraAttached=!0,t(n)})).catch((function(e){console.error("An error occurred: ".concat(e)),n(e)}))}))}},{key:"_attachVideo",value:function(){var e=this;return new Promise((function(t){e.video.addEventListener("canplay",(function(){var n=e.video,i=n.videoWidth,o=n.videoHeight;e._videoWidth=i,e._videoHeight=o/(i/e._videoWidth),Number.isNaN(e._videoHeight)&&(e._videoHeight=e._videoWidth/(4/3)),oe=Math.min(document.body.clientWidth,e._videoWidth),se=Math.min(document.body.clientHeight,e._videoHeight),e.canvasVideo.width=oe,e.canvasVideo.height=se,e.canvasVideo.style.width="".concat(oe,"px"),e.canvasVideo.style.height="".concat(se,"px"),e.ctxVideo.translate(e._videoWidth,0),e.ctxVideo.scale(-1,1),e.info=new ne(oe,se),e.info.init("vllunapass",e.wrapper),e._renderVideo(),e.isVideoAttached=!0,t()}),!1)}))}},{key:"_renderVideo",value:function(){var e=this;if(this.video.readyState===this.video.HAVE_ENOUGH_DATA){this._videoHeight,this.canvasVideo.height;var t=(this.canvasVideo.width-this._videoWidth)/2;this.canvasVideo.height,this._videoHeight,this._videoWidth,this.ctxVideo.drawImage(this.video,-t,0)}requestAnimationFrame((function(){return e._renderVideo()}))}},{key:"_connectWS",value:function(){var e=this;return new Promise((function(t,n){e.ws=new d(e.wsConnectionString,null),e.ws.onopen=function(){e.isWSConnected=!0,t(e.ws)},e.ws.onerror=function(t){e.isWSConnected=!1,e.info.renderInfo(e.isWSConnected,[f]),n(t)},e.ws.onclose=function(){e.isWSConnected=!1,e.info.renderInfo(e.isWSConnected)}}))}},{key:"checkLiveness",value:function(){var e=this;this.isReady&&(this.ws.onmessage=function(t){e._handleResponse(t)},setTimeout((function(){return e._sendPhoto()}),200))}},{key:"_handleResponse",value:function(e){var t=this,n=JSON.parse(e.data);if(!n.isOk&&n.details){var i=n.details.faceFramePosition.faceRect,o=n.errors;this.info.renderInfo(this.isWSConnected,o,i)}if(!n.isOk&&!n.details){var s=n.errors;this.info.renderInfo(this.isWSConnected,s)}n.isOk?(this.onSuccess&&this.onSuccess(n),this.info.renderInfo(this.isWSConnected),this.ws.close()):setTimeout((function(){return t._sendPhoto()}),200)}},{key:"_sendPhoto",value:function(){var e=this.canvasVideo.toDataURL("image/png");this.ws.send(e)}},{key:"isReady",get:function(){return this.isCameraAttached&&this.isVideoAttached&&this.isWSConnected}}])&&ie(t.prototype,n),i&&ie(t,i),e}();window.LunaPass=re}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,